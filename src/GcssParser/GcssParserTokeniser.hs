{-# OPTIONS_GHC -fno-warn-unused-binds -fno-warn-missing-signatures #-}
{-# LANGUAGE CPP #-}
{-# LINE 2 "src/GcssParser/GcssParserTokeniser.x" #-}

module GcssParser.GcssParserTokeniser (Tokens(..),alexScanTokens) where

import Prelude hiding (Either(..))

#if __GLASGOW_HASKELL__ >= 603
#include "ghcconfig.h"
#elif defined(__GLASGOW_HASKELL__)
#include "config.h"
#endif
#if __GLASGOW_HASKELL__ >= 503
import Data.Array
import Data.Array.Base (unsafeAt)
#else
import Array
#endif
{-# LINE 1 "templates\wrappers.hs" #-}
{-# LINE 1 "templates\\wrappers.hs" #-}
{-# LINE 1 "<built-in>" #-}
{-# LINE 1 "<command-line>" #-}
{-# LINE 9 "<command-line>" #-}
{-# LINE 1 "C:\\Users\\Z003W9PJ\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.2.2\\lib/include\\ghcversion.h" #-}















{-# LINE 9 "<command-line>" #-}
{-# LINE 1 "C:\\Users\\Z003W9PJ\\AppData\\Local\\Temp\\ghc3000_0\\ghc_2.h" #-}




























































































































































{-# LINE 9 "<command-line>" #-}
{-# LINE 1 "templates\\wrappers.hs" #-}
-- -----------------------------------------------------------------------------
-- Alex wrapper code.
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.






import Data.Word (Word8)
{-# LINE 28 "templates\\wrappers.hs" #-}

import Data.Char (ord)
import qualified Data.Bits

-- | Encode a Haskell String to a list of Word8 values, in UTF8 format.
utf8Encode :: Char -> [Word8]
utf8Encode = map fromIntegral . go . ord
 where
  go oc
   | oc <= 0x7f       = [oc]

   | oc <= 0x7ff      = [ 0xc0 + (oc `Data.Bits.shiftR` 6)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]

   | oc <= 0xffff     = [ 0xe0 + (oc `Data.Bits.shiftR` 12)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]
   | otherwise        = [ 0xf0 + (oc `Data.Bits.shiftR` 18)
                        , 0x80 + ((oc `Data.Bits.shiftR` 12) Data.Bits..&. 0x3f)
                        , 0x80 + ((oc `Data.Bits.shiftR` 6) Data.Bits..&. 0x3f)
                        , 0x80 + oc Data.Bits..&. 0x3f
                        ]



type Byte = Word8

-- -----------------------------------------------------------------------------
-- The input type

{-# LINE 79 "templates\\wrappers.hs" #-}

{-# LINE 102 "templates\\wrappers.hs" #-}

{-# LINE 120 "templates\\wrappers.hs" #-}

{-# LINE 138 "templates\\wrappers.hs" #-}

-- -----------------------------------------------------------------------------
-- Token positions

-- `Posn' records the location of a token in the input text.  It has three
-- fields: the address (number of chacaters preceding the token), line number
-- and column of a token within the file. `start_pos' gives the position of the
-- start of the file and `eof_pos' a standard encoding for the end of file.
-- `move_pos' calculates the new position after traversing a given character,
-- assuming the usual eight character tab stops.

{-# LINE 161 "templates\\wrappers.hs" #-}

-- -----------------------------------------------------------------------------
-- Default monad

{-# LINE 274 "templates\\wrappers.hs" #-}


-- -----------------------------------------------------------------------------
-- Monad (with ByteString input)

{-# LINE 379 "templates\\wrappers.hs" #-}


-- -----------------------------------------------------------------------------
-- Basic wrapper


type AlexInput = (Char,[Byte],String)

alexInputPrevChar :: AlexInput -> Char
alexInputPrevChar (c,_,_) = c

-- alexScanTokens :: String -> [token]
alexScanTokens str = go ('\n',[],str)
  where go inp__@(_,_bs,s) =
          case alexScan inp__ 0 of
                AlexEOF -> []
                AlexError _ -> error "lexical error"
                AlexSkip  inp__' _ln     -> go inp__'
                AlexToken inp__' len act -> act (take len s) : go inp__'

alexGetByte :: AlexInput -> Maybe (Byte,AlexInput)
alexGetByte (c,(b:bs),s) = Just (b,(c,bs,s))
alexGetByte (_,[],[])    = Nothing
alexGetByte (_,[],(c:s)) = case utf8Encode c of
                             (b:bs) -> Just (b, (c, bs, s))
                             [] -> Nothing



-- -----------------------------------------------------------------------------
-- Basic wrapper, ByteString version

{-# LINE 425 "templates\\wrappers.hs" #-}

{-# LINE 440 "templates\\wrappers.hs" #-}


-- -----------------------------------------------------------------------------
-- Posn wrapper

-- Adds text positions to the basic model.

{-# LINE 457 "templates\\wrappers.hs" #-}


-- -----------------------------------------------------------------------------
-- Posn wrapper, ByteString version

{-# LINE 473 "templates\\wrappers.hs" #-}


-- -----------------------------------------------------------------------------
-- GScan wrapper

-- For compatibility with previous versions of Alex, and because we can.

alex_tab_size :: Int
alex_tab_size = 8
alex_base :: Array Int Int
alex_base = listArray (0 :: Int, 1021)
  [ -8
  , -65
  , -62
  , -75
  , 79
  , -70
  , -73
  , -60
  , -89
  , -92
  , -103
  , -54
  , -67
  , -52
  , -63
  , -61
  , -53
  , 17
  , -58
  , -48
  , -56
  , -55
  , -66
  , -59
  , -46
  , 142
  , -49
  , -42
  , -34
  , -18
  , -31
  , -15
  , -33
  , -14
  , -17
  , -4
  , -7
  , 6
  , 12
  , 19
  , 139
  , 15
  , 33
  , 30
  , 35
  , 20
  , 128
  , 21
  , 259
  , 16
  , 120
  , 124
  , 37
  , 67
  , 40
  , 39
  , 140
  , 145
  , 147
  , 117
  , 150
  , 119
  , 121
  , 152
  , 154
  , 156
  , 161
  , 162
  , 164
  , 163
  , 153
  , 166
  , 158
  , 167
  , 170
  , 171
  , 160
  , 174
  , 176
  , 177
  , 172
  , 180
  , 181
  , 182
  , 183
  , 185
  , 184
  , 168
  , 169
  , 187
  , 178
  , 192
  , 193
  , 191
  , 257
  , 194
  , 188
  , 189
  , 190
  , 247
  , 250
  , 249
  , 246
  , 195
  , 197
  , 254
  , 274
  , 276
  , 201
  , 279
  , 258
  , 433
  , 202
  , 186
  , 264
  , 203
  , 261
  , 281
  , 268
  , 280
  , 277
  , 282
  , 283
  , 285
  , 288
  , 291
  , 284
  , 292
  , 286
  , 293
  , 295
  , 299
  , 298
  , 289
  , 301
  , 424
  , 302
  , 435
  , 438
  , 309
  , 443
  , 317
  , 458
  , 457
  , 426
  , 451
  , 432
  , 447
  , 450
  , 409
  , 456
  , 454
  , 452
  , 459
  , 448
  , 463
  , 453
  , 446
  , 460
  , 449
  , 462
  , 467
  , 416
  , 455
  , 421
  , 427
  , 461
  , 476
  , 474
  , 464
  , 477
  , 480
  , 481
  , 483
  , 472
  , 486
  , 478
  , 489
  , 473
  , 484
  , 487
  , 479
  , 493
  , 488
  , 491
  , 512
  , 497
  , 490
  , 492
  , 504
  , 501
  , 494
  , 495
  , 496
  , 499
  , 507
  , 513
  , 500
  , 514
  , 511
  , 468
  , 505
  , 510
  , 515
  , 517
  , 518
  , 659
  , 614
  , 502
  , 523
  , 520
  , 650
  , 526
  , 654
  , 655
  , 508
  , 660
  , 509
  , 657
  , 658
  , 801
  , 653
  , 662
  , 651
  , 652
  , 670
  , 663
  , 798
  , 661
  , 669
  , 668
  , 799
  , 800
  , 789
  , 826
  , 802
  , 803
  , 805
  , 811
  , 804
  , 813
  , 767
  , 815
  , 817
  , 808
  , 819
  , 816
  , 827
  , 828
  , 818
  , 820
  , 821
  , 822
  , 831
  , 824
  , 823
  , 825
  , 829
  , 833
  , 830
  , 835
  , 832
  , 834
  , 836
  , 837
  , 838
  , 839
  , 840
  , 841
  , 843
  , 849
  , 842
  , 844
  , 847
  , 854
  , 856
  , 857
  , 858
  , 851
  , 814
  , 860
  , 859
  , 853
  , 861
  , 862
  , 863
  , 864
  , 810
  , 865
  , 866
  , 846
  , 848
  , 869
  , 993
  , 868
  , 988
  , 999
  , 996
  , 1005
  , 1006
  , 1009
  , 994
  , 989
  , 1008
  , 998
  , 1012
  , 1010
  , 1015
  , 1007
  , 1013
  , 1016
  , 1023
  , 1003
  , 1011
  , 976
  , 1017
  , 1025
  , 1020
  , 1018
  , 1028
  , 1001
  , 1014
  , 1019
  , 1021
  , 1026
  , 1024
  , 1022
  , 1027
  , 1031
  , 1035
  , 1030
  , 1039
  , 1044
  , 1036
  , 1047
  , 1048
  , 1049
  , 1050
  , 1051
  , 1052
  , 1033
  , 1053
  , 1054
  , 1029
  , 1034
  , 1046
  , 1038
  , 1060
  , 1061
  , 1062
  , 1058
  , 1032
  , 1067
  , 1069
  , 1064
  , 1040
  , 1055
  , 1071
  , 1056
  , 1068
  , 1065
  , 1066
  , 1073
  , 1074
  , 1081
  , 1070
  , 1083
  , 1072
  , 1080
  , 1085
  , 1075
  , 1076
  , 1077
  , 1087
  , 1082
  , 1088
  , 1089
  , 1094
  , 1079
  , 1095
  , 1086
  , 1091
  , 1084
  , 1090
  , 1078
  , 1092
  , 1093
  , 1100
  , 1096
  , 1097
  , 1099
  , 1098
  , 1101
  , 1102
  , 1103
  , 1108
  , 1109
  , 1104
  , 1113
  , 1105
  , 1115
  , 1118
  , 1111
  , 1106
  , 1119
  , 1107
  , 1059
  , 1116
  , 1110
  , 1120
  , 1125
  , 1122
  , 1123
  , 1124
  , 1132
  , 1121
  , 1127
  , 1131
  , 1126
  , 1134
  , 1112
  , 1128
  , 1137
  , 1135
  , 1130
  , 1141
  , 1117
  , 1136
  , 1145
  , 1140
  , 1129
  , 1133
  , 1142
  , 1138
  , 1139
  , 1143
  , 1144
  , 1168
  , 1146
  , 1147
  , 1148
  , 1150
  , 1149
  , 1151
  , 1153
  , 1154
  , 1152
  , 1155
  , 1156
  , 1158
  , 1157
  , 1160
  , 1159
  , 1161
  , 1163
  , 1162
  , 1170
  , 1164
  , 1165
  , 1166
  , 1167
  , 1169
  , 1176
  , 1171
  , 1174
  , 1172
  , 1173
  , 1178
  , 1185
  , 1179
  , 1182
  , 1177
  , 1180
  , 1192
  , 1189
  , 1181
  , 1190
  , 1188
  , 1183
  , 1191
  , 1193
  , 1196
  , 1194
  , 1195
  , 1202
  , 1197
  , 1198
  , 1201
  , 1204
  , 1212
  , 1203
  , 1205
  , 1217
  , 1206
  , 1208
  , 1209
  , 1210
  , 1211
  , 1222
  , 1221
  , 1214
  , 1226
  , 1242
  , 1215
  , 1232
  , 1218
  , 1225
  , 1219
  , 1220
  , 1227
  , 1223
  , 1230
  , 1231
  , 1240
  , 1233
  , 1229
  , 1238
  , 1234
  , 1235
  , 1239
  , 1236
  , 1241
  , 1243
  , 1244
  , 1245
  , 1252
  , 1246
  , 1247
  , 1248
  , 0
  , 1199
  , 1251
  , 1261
  , 1250
  , 1256
  , 1260
  , 1237
  , 1187
  , 1175
  , 1257
  , 1377
  , 1370
  , 1373
  , 1216
  , 1350
  , 1249
  , 1276
  , 1383
  , 1380
  , 1393
  , 1273
  , 1278
  , 1378
  , 1379
  , 1396
  , 1401
  , 1390
  , 1385
  , 1391
  , 1392
  , 1397
  , 1394
  , 1398
  , 1400
  , 1412
  , 1403
  , 1414
  , 1407
  , 1399
  , 1402
  , 0
  , 1344
  , 1535
  , 0
  , 1427
  , 1513
  , 1406
  , 1531
  , 1525
  , 1529
  , 1534
  , 1523
  , 1524
  , 1526
  , 1527
  , 1530
  , 1614
  , 1533
  , 1528
  , 1598
  , 1537
  , 1603
  , 1538
  , 1616
  , 1604
  , 1605
  , 1607
  , 1613
  , 1615
  , 1608
  , 1612
  , 1617
  , 1619
  , 1620
  , 1625
  , 1624
  , 1626
  , 1628
  , 1632
  , 1631
  , 1634
  , 1630
  , 1633
  , 1666
  , 1641
  , 1640
  , 1642
  , 1655
  , 1643
  , 1646
  , 1647
  , 1654
  , 1644
  , 1648
  , 1651
  , 1645
  , 1649
  , 1652
  , 1656
  , 1653
  , 1657
  , 1671
  , 1661
  , 1658
  , 1664
  , 1665
  , 0
  , 1595
  , 1663
  , 1851
  , 1787
  , 0
  , 1672
  , 1659
  , 1681
  , 1668
  , 1669
  , 1670
  , 1675
  , 1695
  , 1679
  , 1680
  , 1685
  , 1684
  , 1689
  , 1686
  , 1687
  , 1690
  , 1691
  , 1696
  , 1692
  , 1715
  , 1701
  , 1709
  , 1700
  , 1698
  , 1697
  , 1704
  , 1707
  , 1716
  , 1975
  , 1966
  , 1973
  , 1967
  , 1978
  , 1948
  , 1981
  , 1968
  , 1971
  , 1976
  , 1974
  , 1985
  , 1987
  , 1667
  , 1988
  , 1990
  , 1989
  , 2028
  , 1980
  , 1982
  , 1979
  , 1983
  , 1986
  , 2004
  , 2020
  , 1997
  , 2005
  , 2006
  , 1949
  , 1996
  , 2007
  , 1998
  , 2008
  , 2015
  , 2016
  , 2057
  , 2056
  , 2058
  , 2059
  , 2053
  , 2029
  , 2030
  , 2026
  , 2045
  , 2036
  , 2033
  , 2048
  , 2046
  , 2035
  , 2037
  , 2038
  , 2039
  , 2040
  , 2044
  , 2047
  , 2055
  , 2054
  , 2065
  , 2066
  , 2063
  , 2060
  , 2061
  , 2070
  , 2062
  , 2074
  , 2067
  , 2069
  , 2071
  , 2077
  , 2024
  , 2031
  , 2043
  , 2086
  , 2068
  , 2083
  , 2082
  , 2094
  , 2079
  , 2097
  , 2098
  , 2099
  , 2091
  , 2088
  , 2102
  , 2173
  , 2109
  , 0
  , 2287
  , 2290
  , 2289
  , 2291
  , 2292
  , 2284
  , 2361
  , 2364
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2584
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2076
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2295
  , 0
  , 0
  , 0
  , 2300
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2302
  , 0
  , 2298
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2303
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2304
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2305
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2306
  , 2312
  , 0
  , 0
  , 2307
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2308
  , 0
  , 2310
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2355
  , 2378
  , 2410
  , 2664
  , 2674
  , 2684
  , 2781
  , 2694
  , 2791
  , 2829
  , 2854
  , 2892
  , 2915
  , 2953
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2293
  , 2964
  , 2957
  , 2683
  , 0
  , 2789
  , 0
  , 2991
  , 0
  , 2688
  , 0
  , 2322
  , 0
  , 2299
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2328
  , 0
  , 0
  , 0
  , 2319
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2318
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2316
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 2323
  , 0
  , 0
  , 0
  , 2337
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  ]

alex_table :: Array Int Int
alex_table = listArray (0 :: Int, 3246)
  [ 0
  , 764
  , 764
  , 764
  , 764
  , 764
  , 766
  , 770
  , 774
  , 514
  , 780
  , 789
  , 792
  , 792
  , 792
  , 794
  , 795
  , 798
  , 802
  , 777
  , 799
  , 808
  , 801
  , 816
  , 764
  , 805
  , 763
  , 809
  , 813
  , 828
  , 821
  , 824
  , 907
  , 908
  , 827
  , 830
  , 906
  , 903
  , 909
  , 910
  , 895
  , 894
  , 894
  , 894
  , 894
  , 894
  , 894
  , 894
  , 894
  , 894
  , 905
  , 832
  , 834
  , 904
  , 836
  , 838
  , 837
  , 732
  , 5
  , 685
  , 921
  , 602
  , 631
  , 206
  , 915
  , 17
  , 842
  , 845
  , 171
  , 917
  , 25
  , 742
  , 48
  , 854
  , 913
  , 919
  , 111
  , 684
  , 298
  , 914
  , 847
  , 127
  , 264
  , 855
  , 869
  , 876
  , 859
  , 911
  , 4
  , 4
  , 4
  , 4
  , 4
  , 537
  , 320
  , 549
  , 916
  , 951
  , 870
  , 871
  , 803
  , 918
  , 872
  , 878
  , 886
  , 926
  , 929
  , 920
  , 930
  , 932
  , 933
  , 4
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 113
  , 865
  , 927
  , 56
  , 460
  , 42
  , 928
  , 936
  , 934
  , 938
  , 880
  , 939
  , 940
  , 941
  , 826
  , 942
  , 943
  , 6
  , 955
  , 678
  , 304
  , 310
  , 946
  , 956
  , 957
  , 564
  , 980
  , 960
  , 959
  , 961
  , 965
  , 966
  , 967
  , 968
  , 973
  , 350
  , 971
  , 1
  , 974
  , 975
  , 978
  , 131
  , 976
  , 986
  , 987
  , 988
  , 963
  , 989
  , 1005
  , 1009
  , 994
  , 997
  , 992
  , 998
  , 1007
  , 1008
  , 11
  , 4
  , 1015
  , 753
  , 761
  , 760
  , 759
  , 748
  , 738
  , 737
  , 754
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 755
  , 102
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 637
  , 207
  , 570
  , 570
  , 570
  , 571
  , 152
  , 2
  , 758
  , 89
  , 500
  , 757
  , 723
  , 422
  , 3
  , 751
  , 1012
  , 525
  , 925
  , 745
  , 605
  , 743
  , 736
  , 354
  , 509
  , 750
  , 471
  , 749
  , 341
  , 12
  , 746
  , 632
  , 735
  , 19
  , 21
  , 731
  , 726
  , 728
  , 727
  , 725
  , 722
  , 178
  , 29
  , 26
  , 708
  , 24
  , 718
  , 719
  , 717
  , 716
  , 707
  , 648
  , 715
  , 713
  , 34
  , 406
  , 754
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 575
  , 714
  , 711
  , 441
  , 642
  , 710
  , 38
  , 706
  , 705
  , 702
  , 721
  , 643
  , 359
  , 161
  , 701
  , 700
  , 43
  , 44
  , 698
  , 45
  , 618
  , 693
  , 689
  , 690
  , 357
  , 688
  , 51
  , 53
  , 52
  , 681
  , 57
  , 59
  , 401
  , 358
  , 61
  , 10
  , 60
  , 682
  , 306
  , 679
  , 62
  , 677
  , 65
  , 68
  , 680
  , 162
  , 70
  , 621
  , 8
  , 671
  , 58
  , 199
  , 672
  , 669
  , 78
  , 668
  , 80
  , 71
  , 81
  , 675
  , 665
  , 667
  , 666
  , 661
  , 660
  , 664
  , 83
  , 87
  , 657
  , 659
  , 333
  , 86
  , 654
  , 653
  , 651
  , 656
  , 652
  , 650
  , 91
  , 647
  , 580
  , 96
  , 638
  , 103
  , 115
  , 633
  , 97
  , 120
  , 98
  , 100
  , 635
  , 105
  , 646
  , 634
  , 639
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 457
  , 107
  , 101
  , 109
  , 110
  , 114
  , 116
  , 627
  , 118
  , 119
  , 124
  , 125
  , 620
  , 623
  , 133
  , 134
  , 616
  , 255
  , 102
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 626
  , 521
  , 135
  , 615
  , 614
  , 613
  , 609
  , 145
  , 147
  , 139
  , 143
  , 163
  , 149
  , 619
  , 606
  , 332
  , 604
  , 603
  , 153
  , 154
  , 610
  , 156
  , 601
  , 600
  , 598
  , 158
  , 159
  , 597
  , 170
  , 599
  , 593
  , 189
  , 166
  , 594
  , 596
  , 592
  , 591
  , 172
  , 595
  , 174
  , 176
  , 590
  , 589
  , 588
  , 177
  , 179
  , 484
  , 183
  , 584
  , 583
  , 587
  , 184
  , 582
  , 581
  , 188
  , 191
  , 192
  , 568
  , 578
  , 210
  , 208
  , 569
  , 198
  , 566
  , 194
  , 577
  , 211
  , 576
  , 200
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 567
  , 217
  , 565
  , 222
  , 562
  , 561
  , 226
  , 223
  , 475
  , 555
  , 470
  , 556
  , 542
  , 229
  , 233
  , 230
  , 236
  , 551
  , 234
  , 309
  , 235
  , 312
  , 559
  , 311
  , 550
  , 241
  , 243
  , 244
  , 242
  , 247
  , 240
  , 547
  , 543
  , 540
  , 279
  , 256
  , 280
  , 269
  , 260
  , 271
  , 257
  , 281
  , 533
  , 532
  , 539
  , 286
  , 528
  , 527
  , 526
  , 524
  , 522
  , 516
  , 520
  , 518
  , 288
  , 289
  , 492
  , 303
  , 300
  , 512
  , 511
  , 510
  , 429
  , 313
  , 415
  , 302
  , 316
  , 314
  , 505
  , 503
  , 498
  , 318
  , 501
  , 322
  , 493
  , 323
  , 466
  , 497
  , 495
  , 494
  , 490
  , 491
  , 324
  , 487
  , 486
  , 327
  , 480
  , 489
  , 479
  , 329
  , 331
  , 330
  , 485
  , 483
  , 482
  , 478
  , 335
  , 337
  , 340
  , 465
  , 405
  , 342
  , 355
  , 0
  , 386
  , 469
  , 362
  , 344
  , 461
  , 462
  , 464
  , 365
  , 458
  , 343
  , 369
  , 353
  , 376
  , 378
  , 379
  , 459
  , 385
  , 368
  , 0
  , 450
  , 453
  , 455
  , 351
  , 398
  , 399
  , 449
  , 400
  , 444
  , 442
  , 438
  , 371
  , 417
  , 418
  , 446
  , 435
  , 397
  , 443
  , 419
  , 420
  , 410
  , 426
  , 437
  , 421
  , 430
  , 423
  , 433
  , 434
  , 432
  , 408
  , 427
  , 0
  , 439
  , 445
  , 414
  , 448
  , 390
  , 502
  , 348
  , 411
  , 384
  , 383
  , 402
  , 395
  , 377
  , 380
  , 387
  , 373
  , 185
  , 364
  , 319
  , 374
  , 360
  , 349
  , 474
  , 336
  , 347
  , 334
  , 488
  , 328
  , 499
  , 496
  , 321
  , 504
  , 315
  , 308
  , 307
  , 317
  , 515
  , 301
  , 517
  , 519
  , 182
  , 536
  , 290
  , 295
  , 409
  , 352
  , 283
  , 436
  , 394
  , 531
  , 291
  , 523
  , 472
  , 270
  , 282
  , 535
  , 278
  , 277
  , 276
  , 275
  , 274
  , 272
  , 538
  , 268
  , 265
  , 262
  , 267
  , 545
  , 266
  , 263
  , 261
  , 258
  , 253
  , 546
  , 325
  , 252
  , 254
  , 251
  , 249
  , 248
  , 245
  , 246
  , 548
  , 239
  , 552
  , 228
  , 231
  , 227
  , 554
  , 224
  , 213
  , 506
  , 225
  , 221
  , 186
  , 157
  , 557
  , 407
  , 218
  , 214
  , 216
  , 284
  , 142
  , 165
  , 160
  , 209
  , 212
  , 141
  , 205
  , 204
  , 203
  , 202
  , 197
  , 195
  , 381
  , 572
  , 456
  , 193
  , 196
  , 579
  , 180
  , 574
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 175
  , 168
  , 167
  , 164
  , 155
  , 146
  , 412
  , 137
  , 413
  , 617
  , 132
  , 508
  , 130
  , 129
  , 126
  , 122
  , 622
  , 123
  , 144
  , 121
  , 624
  , 220
  , 396
  , 629
  , 299
  , 117
  , 630
  , 112
  , 108
  , 95
  , 106
  , 104
  , 637
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 219
  , 645
  , 403
  , 655
  , 563
  , 88
  , 658
  , 85
  , 84
  , 670
  , 82
  , 662
  , 663
  , 90
  , 75
  , 73
  , 69
  , 99
  , 640
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 608
  , 74
  , 72
  , 67
  , 674
  , 66
  , 64
  , 79
  , 63
  , 54
  , 55
  , 50
  , 375
  , 558
  , 686
  , 47
  , 49
  , 388
  , 534
  , 136
  , 691
  , 696
  , 611
  , 692
  , 363
  , 699
  , 452
  , 704
  , 190
  , 41
  , 703
  , 39
  , 40
  , 709
  , 712
  , 35
  , 37
  , 33
  , 32
  , 28
  , 31
  , 720
  , 27
  , 724
  , 22
  , 23
  , 729
  , 18
  , 733
  , 273
  , 931
  , 16
  , 1020
  , 237
  , 15
  , 697
  , 7
  , 744
  , 14
  , 747
  , 752
  , 586
  , 762
  , 676
  , 649
  , 215
  , 13
  , 1021
  , 1019
  , 1018
  , 1017
  , 1014
  , 285
  , 447
  , 338
  , 250
  , 1013
  , 356
  , 1010
  , 1006
  , 1004
  , 151
  , 366
  , 1002
  , 1001
  , 544
  , 990
  , 1000
  , 999
  , 996
  , 985
  , 993
  , 995
  , 991
  , 984
  , 983
  , 1011
  , 982
  , 981
  , 977
  , 972
  , 970
  , 9
  , 755
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 969
  , 964
  , 962
  , 954
  , 958
  , 953
  , 952
  , 950
  , 949
  , 945
  , 937
  , 944
  , 935
  , 673
  , 912
  , 888
  , 695
  , 887
  , 885
  , 923
  , 873
  , 868
  , 877
  , 924
  , 884
  , 612
  , 94
  , 883
  , 138
  , 339
  , 730
  , 864
  , 476
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 553
  , 389
  , 882
  , 875
  , 874
  , 867
  , 863
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 861
  , 860
  , 346
  , 541
  , 326
  , 881
  , 858
  , 857
  , 853
  , 856
  , 852
  , 849
  , 851
  , 850
  , 848
  , 844
  , 843
  , 839
  , 833
  , 835
  , 823
  , 820
  , 831
  , 825
  , 818
  , 822
  , 898
  , 898
  , 898
  , 898
  , 898
  , 898
  , 819
  , 817
  , 815
  , 814
  , 812
  , 811
  , 305
  , 473
  , 810
  , 792
  , 792
  , 804
  , 792
  , 790
  , 20
  , 806
  , 797
  , 734
  , 800
  , 454
  , 788
  , 416
  , 796
  , 807
  , 431
  , 879
  , 76
  , 392
  , 793
  , 787
  , 979
  , 786
  , 785
  , 791
  , 784
  , 783
  , 782
  , 297
  , 779
  , 776
  , 507
  , 778
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 773
  , 772
  , 771
  , 767
  , 769
  , 768
  , -1
  , 30
  , 764
  , 764
  , 764
  , 764
  , 764
  , 1003
  , 181
  , 948
  , 829
  , 841
  , 367
  , 424
  , 382
  , 781
  , 840
  , 404
  , 862
  , 866
  , 292
  , 232
  , 947
  , 425
  , 765
  , 764
  , 846
  , 560
  , 1016
  , 361
  , 370
  , 372
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 463
  , 296
  , 0
  , 0
  , 293
  , 0
  , 0
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 0
  , 0
  , 0
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 900
  , 900
  , 900
  , 900
  , 900
  , 900
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 639
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 641
  , 640
  , 200
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 573
  , 574
  , 287
  , 529
  , 529
  , 529
  , 530
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 775
  , 896
  , 896
  , 896
  , 896
  , 896
  , 896
  , 896
  , 896
  , 896
  , 896
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 893
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 891
  , 891
  , 891
  , 891
  , 891
  , 891
  , 891
  , 891
  , 891
  , 891
  , 294
  , 46
  , 0
  , 0
  , 173
  , 468
  , 0
  , 0
  , 0
  , 140
  , 345
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 467
  , 0
  , 0
  , 0
  , 451
  , 0
  , 0
  , 0
  , 0
  , 754
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 756
  , 755
  , 102
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 636
  , 637
  , 207
  , 570
  , 570
  , 570
  , 571
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 892
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 0
  , 0
  , 0
  , 0
  , 0
  , 187
  , 0
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 477
  , 0
  , 0
  , 0
  , 0
  , 92
  , 513
  , 687
  , 0
  , 0
  , 0
  , 0
  , 440
  , 0
  , 0
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 0
  , 897
  , 897
  , 897
  , 897
  , 897
  , 897
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 740
  , 687
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 0
  , 899
  , 899
  , 899
  , 899
  , 899
  , 899
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 0
  , 901
  , 901
  , 901
  , 901
  , 901
  , 901
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 0
  , 0
  , 0
  , 902
  , 902
  , 902
  , 902
  , 902
  , 902
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 36
  , 890
  , 890
  , 890
  , 890
  , 890
  , 890
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 0
  , 0
  , 393
  , 0
  , 0
  , 607
  , 625
  , 0
  , 0
  , 644
  , 0
  , 77
  , 585
  , 0
  , 0
  , 259
  , 428
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 150
  , 0
  , 628
  , 889
  , 889
  , 889
  , 889
  , 889
  , 889
  , 0
  , 0
  , 741
  , 93
  , 694
  , 0
  , 0
  , 201
  , 0
  , 169
  , 0
  , 128
  , 683
  , 0
  , 391
  , 148
  , 0
  , 922
  , 0
  , 238
  , 481
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 739
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 740
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  , 0
  ]

alex_check :: Array Int Int
alex_check = listArray (0 :: Int, 3246)
  [ -1
  , 9
  , 10
  , 11
  , 12
  , 13
  , 71
  , 69
  , 83
  , 79
  , 83
  , 71
  , 101
  , 105
  , 117
  , 69
  , 83
  , 69
  , 71
  , 89
  , 83
  , 69
  , 83
  , 89
  , 32
  , 83
  , 34
  , 83
  , 83
  , 71
  , 89
  , 77
  , 40
  , 41
  , 83
  , 69
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 69
  , 83
  , 61
  , 69
  , 69
  , 89
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 83
  , 71
  , 76
  , 77
  , 78
  , 79
  , 80
  , 67
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 87
  , 89
  , 90
  , 71
  , 69
  , 68
  , 67
  , 95
  , 9
  , 10
  , 11
  , 12
  , 13
  , 101
  , 102
  , 78
  , 104
  , 80
  , 65
  , 69
  , 83
  , 109
  , 67
  , 83
  , 83
  , 89
  , 69
  , 115
  , 41
  , 69
  , 71
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 65
  , 69
  , 89
  , 82
  , 69
  , 84
  , 89
  , 69
  , 75
  , 69
  , 89
  , 101
  , 69
  , 101
  , 79
  , 101
  , 71
  , 85
  , 69
  , 84
  , 85
  , 86
  , 75
  , 69
  , 69
  , 68
  , 67
  , 71
  , 71
  , 83
  , 79
  , 71
  , 69
  , 69
  , 67
  , 78
  , 83
  , 78
  , 69
  , 69
  , 67
  , 84
  , 77
  , 69
  , 69
  , 69
  , 87
  , 69
  , 77
  , 65
  , 89
  , 89
  , 75
  , 73
  , 69
  , 69
  , 77
  , 69
  , 71
  , 69
  , 79
  , 79
  , 79
  , 69
  , 69
  , 69
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 65
  , 68
  , 79
  , 68
  , 69
  , 79
  , 73
  , 72
  , 83
  , 79
  , 77
  , 78
  , 77
  , 79
  , 79
  , 65
  , 79
  , 82
  , 85
  , 69
  , 85
  , 69
  , 67
  , 83
  , 69
  , 73
  , 69
  , 83
  , 75
  , 73
  , 69
  , 73
  , 73
  , 69
  , 67
  , 83
  , 67
  , 69
  , 53
  , 79
  , 69
  , 79
  , 67
  , 69
  , 51
  , 80
  , 69
  , 69
  , 83
  , 114
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 69
  , 79
  , 69
  , 72
  , 73
  , 69
  , 65
  , 51
  , 53
  , 85
  , 79
  , 80
  , 71
  , 82
  , 65
  , 85
  , 71
  , 69
  , 111
  , 65
  , 89
  , 69
  , 65
  , 73
  , 83
  , 79
  , 65
  , 83
  , 77
  , 69
  , 83
  , 117
  , 82
  , 83
  , 115
  , 104
  , 83
  , 79
  , 73
  , 65
  , 115
  , 69
  , 67
  , 65
  , 85
  , 114
  , 67
  , 69
  , 117
  , 79
  , 85
  , 73
  , 71
  , 69
  , 67
  , 79
  , 85
  , 79
  , 73
  , 97
  , 69
  , 79
  , 85
  , 53
  , 69
  , 79
  , 77
  , 65
  , 69
  , 79
  , 82
  , 83
  , 79
  , 79
  , 69
  , 83
  , 79
  , 79
  , 67
  , 67
  , 71
  , 73
  , 79
  , 83
  , 77
  , 79
  , 73
  , 78
  , 73
  , 73
  , 69
  , 73
  , 83
  , 69
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 65
  , 75
  , 67
  , 73
  , 73
  , 69
  , 73
  , 73
  , 79
  , 71
  , 83
  , 65
  , 73
  , 85
  , 69
  , 71
  , 79
  , 82
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 69
  , 73
  , 73
  , 73
  , 85
  , 49
  , 65
  , 73
  , 65
  , 77
  , 77
  , 76
  , 115
  , 85
  , 69
  , 84
  , 69
  , 79
  , 69
  , 73
  , 85
  , 73
  , 65
  , 65
  , 73
  , 73
  , 65
  , 73
  , 65
  , 79
  , 65
  , 87
  , 79
  , 73
  , 79
  , 73
  , 69
  , 73
  , 79
  , 73
  , 67
  , 73
  , 73
  , 73
  , 65
  , 73
  , 95
  , 73
  , 71
  , 65
  , 79
  , 65
  , 65
  , 65
  , 73
  , 65
  , 73
  , 79
  , 69
  , 83
  , 65
  , 65
  , 69
  , 65
  , 73
  , 73
  , 67
  , 73
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 73
  , 79
  , 69
  , 73
  , 65
  , 65
  , 83
  , 79
  , 69
  , 77
  , 67
  , 69
  , 73
  , 67
  , 65
  , 71
  , 79
  , 67
  , 77
  , 80
  , 73
  , 82
  , 79
  , 84
  , 67
  , 115
  , 67
  , 73
  , 77
  , 77
  , 85
  , 69
  , 97
  , 73
  , 69
  , 87
  , 67
  , 79
  , 83
  , 83
  , 87
  , 77
  , 69
  , 65
  , 83
  , 75
  , 65
  , 65
  , 65
  , 65
  , 83
  , 83
  , 65
  , 65
  , 69
  , 69
  , 76
  , 85
  , 95
  , 65
  , 65
  , 65
  , 82
  , 71
  , 84
  , 85
  , 65
  , 101
  , 65
  , 95
  , 65
  , 73
  , 83
  , 83
  , 67
  , 73
  , 73
  , 79
  , 79
  , 79
  , 65
  , 73
  , 65
  , 69
  , 65
  , 79
  , 65
  , 83
  , 65
  , 73
  , 77
  , 69
  , 83
  , 83
  , 83
  , 67
  , 67
  , 77
  , 73
  , 65
  , 45
  , 83
  , 69
  , -1
  , 111
  , 79
  , 69
  , 95
  , 73
  , 77
  , 79
  , 69
  , 69
  , 89
  , 67
  , 85
  , 67
  , 65
  , 73
  , 83
  , 67
  , 83
  , -1
  , 73
  , 83
  , 85
  , 99
  , 73
  , 69
  , 73
  , 73
  , 65
  , 67
  , 65
  , 95
  , 89
  , 65
  , 79
  , 69
  , 95
  , 79
  , 77
  , 67
  , 83
  , 65
  , 83
  , 95
  , 73
  , 72
  , 79
  , 78
  , 84
  , 50
  , 90
  , -1
  , 78
  , 76
  , 84
  , 76
  , 76
  , 50
  , 68
  , 84
  , 76
  , 76
  , 84
  , 82
  , 78
  , 82
  , 84
  , 78
  , 50
  , 71
  , 68
  , 84
  , 84
  , 82
  , 80
  , 82
  , 84
  , 76
  , 82
  , 84
  , 80
  , 84
  , 84
  , 78
  , 80
  , 76
  , 70
  , 84
  , 78
  , 76
  , 82
  , 68
  , 86
  , 66
  , 82
  , 84
  , 76
  , 74
  , 84
  , 83
  , 84
  , 82
  , 82
  , 82
  , 83
  , 70
  , 84
  , 80
  , 84
  , 84
  , 84
  , 78
  , 84
  , 84
  , 82
  , 72
  , 68
  , 78
  , 84
  , 66
  , 84
  , 84
  , 82
  , 82
  , 72
  , 52
  , 84
  , 82
  , 86
  , 72
  , 84
  , 68
  , 76
  , 84
  , 84
  , 84
  , 78
  , 76
  , 84
  , 68
  , 78
  , 72
  , 70
  , 79
  , 84
  , 80
  , 78
  , 40
  , 84
  , 78
  , 84
  , 84
  , 82
  , 70
  , 50
  , 108
  , 76
  , 82
  , 84
  , 50
  , 84
  , 84
  , 84
  , 84
  , 82
  , 84
  , 83
  , 84
  , 76
  , 82
  , 78
  , 80
  , 84
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 78
  , 86
  , 84
  , 108
  , 76
  , 80
  , 68
  , 84
  , 70
  , 68
  , 86
  , 73
  , 66
  , 78
  , 84
  , 76
  , 80
  , 80
  , 80
  , 76
  , 78
  , 83
  , 84
  , 78
  , 86
  , 68
  , 78
  , 68
  , 76
  , 78
  , 86
  , 84
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 65
  , 88
  , 71
  , 78
  , 69
  , 76
  , 72
  , 84
  , 84
  , 76
  , 84
  , 84
  , 82
  , 82
  , 86
  , 78
  , 78
  , 82
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 69
  , 86
  , 82
  , 70
  , 82
  , 84
  , 82
  , 76
  , 78
  , 84
  , 78
  , 82
  , 76
  , 77
  , 78
  , 78
  , 82
  , 81
  , 82
  , 88
  , 78
  , 78
  , 86
  , 82
  , 83
  , 76
  , 78
  , 76
  , 87
  , 84
  , 82
  , 84
  , 84
  , 50
  , 76
  , 78
  , 86
  , 78
  , 66
  , 76
  , 80
  , 70
  , 78
  , 78
  , 76
  , 84
  , 84
  , 78
  , 82
  , 78
  , 66
  , 78
  , 76
  , 65
  , 84
  , 67
  , 78
  , 82
  , 84
  , 78
  , 78
  , 73
  , 82
  , 65
  , 76
  , 67
  , 77
  , 78
  , 70
  , 84
  , 84
  , 84
  , 74
  , 85
  , 76
  , 77
  , 84
  , 65
  , 82
  , 82
  , 78
  , 83
  , 84
  , 82
  , 78
  , 97
  , 54
  , 84
  , 84
  , 82
  , 72
  , 78
  , 84
  , 84
  , 68
  , 78
  , 84
  , 82
  , 84
  , 78
  , 76
  , 68
  , 114
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 68
  , 78
  , 72
  , 68
  , 80
  , 100
  , 68
  , 82
  , 80
  , 76
  , 68
  , 80
  , 68
  , 68
  , 68
  , 78
  , 69
  , 78
  , 82
  , 72
  , 114
  , 68
  , 68
  , 78
  , 84
  , 78
  , 79
  , 84
  , 83
  , 82
  , 76
  , 76
  , 85
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 82
  , 67
  , 84
  , 84
  , 84
  , 84
  , 84
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 84
  , 84
  , 81
  , 82
  , 83
  , 84
  , 48
  , 50
  , 48
  , 50
  , 56
  , 84
  , 82
  , 82
  , 68
  , 78
  , 82
  , 68
  , 82
  , 72
  , 80
  , 76
  , 84
  , 84
  , 68
  , 84
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 84
  , 78
  , 68
  , 68
  , 72
  , 76
  , 67
  , 68
  , 78
  , 116
  , 110
  , 68
  , 100
  , 76
  , 69
  , 84
  , 78
  , 78
  , 82
  , 80
  , 68
  , 78
  , 82
  , 84
  , 85
  , 70
  , 87
  , 84
  , 82
  , 78
  , 75
  , 68
  , 84
  , 78
  , 68
  , 68
  , 68
  , 82
  , 78
  , 68
  , 85
  , 84
  , 0
  , 1
  , 2
  , 3
  , 4
  , 5
  , 6
  , 7
  , 8
  , 9
  , 10
  , 11
  , 12
  , 13
  , 14
  , 15
  , 16
  , 17
  , 18
  , 19
  , 20
  , 21
  , 22
  , 23
  , 24
  , 25
  , 26
  , 27
  , 28
  , 29
  , 30
  , 31
  , 32
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 78
  , 76
  , 78
  , 84
  , 78
  , 78
  , 10
  , 69
  , 9
  , 10
  , 11
  , 12
  , 13
  , 83
  , 79
  , 78
  , 83
  , 82
  , 78
  , 82
  , 73
  , 84
  , 83
  , 95
  , 83
  , 83
  , 69
  , 84
  , 83
  , 95
  , 34
  , 32
  , 69
  , 79
  , 83
  , 77
  , 95
  , 95
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 95
  , 77
  , -1
  , -1
  , 80
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , -1
  , -1
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 128
  , 129
  , 130
  , 131
  , 132
  , 133
  , 134
  , 135
  , 136
  , 137
  , 138
  , 139
  , 140
  , 141
  , 142
  , 143
  , 144
  , 145
  , 146
  , 147
  , 148
  , 149
  , 150
  , 151
  , 152
  , 153
  , 154
  , 155
  , 156
  , 157
  , 158
  , 159
  , 160
  , 161
  , 162
  , 163
  , 164
  , 165
  , 166
  , 167
  , 168
  , 169
  , 170
  , 171
  , 172
  , 173
  , 174
  , 175
  , 176
  , 177
  , 178
  , 179
  , 180
  , 181
  , 182
  , 183
  , 184
  , 185
  , 186
  , 187
  , 188
  , 189
  , 190
  , 191
  , 192
  , 193
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 245
  , 246
  , 247
  , 248
  , 249
  , 250
  , 251
  , 252
  , 253
  , 254
  , 255
  , 33
  , 34
  , 35
  , 36
  , 37
  , 38
  , 39
  , 40
  , 41
  , 42
  , 43
  , 44
  , 45
  , 46
  , 47
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 58
  , 59
  , 60
  , 61
  , 62
  , 63
  , 64
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 71
  , 72
  , 73
  , 74
  , 75
  , 76
  , 77
  , 78
  , 79
  , 80
  , 81
  , 82
  , 83
  , 84
  , 85
  , 86
  , 87
  , 88
  , 89
  , 90
  , 91
  , 92
  , 93
  , 94
  , 95
  , 96
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 103
  , 104
  , 105
  , 106
  , 107
  , 108
  , 109
  , 110
  , 111
  , 112
  , 113
  , 114
  , 115
  , 116
  , 117
  , 118
  , 119
  , 120
  , 121
  , 122
  , 123
  , 124
  , 125
  , 126
  , 127
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 69
  , 65
  , -1
  , -1
  , 73
  , 69
  , -1
  , -1
  , -1
  , 73
  , 79
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 86
  , -1
  , -1
  , -1
  , 85
  , -1
  , -1
  , -1
  , -1
  , 194
  , 195
  , 196
  , 197
  , 198
  , 199
  , 200
  , 201
  , 202
  , 203
  , 204
  , 205
  , 206
  , 207
  , 208
  , 209
  , 210
  , 211
  , 212
  , 213
  , 214
  , 215
  , 216
  , 217
  , 218
  , 219
  , 220
  , 221
  , 222
  , 223
  , 224
  , 225
  , 226
  , 227
  , 228
  , 229
  , 230
  , 231
  , 232
  , 233
  , 234
  , 235
  , 236
  , 237
  , 238
  , 239
  , 240
  , 241
  , 242
  , 243
  , 244
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 73
  , -1
  , -1
  , -1
  , -1
  , 78
  , 79
  , 88
  , -1
  , -1
  , -1
  , -1
  , 85
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 111
  , 120
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , -1
  , -1
  , -1
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 48
  , 49
  , 50
  , 51
  , 52
  , 53
  , 54
  , 55
  , 56
  , 57
  , 47
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , 65
  , 66
  , 67
  , 68
  , 69
  , 70
  , -1
  , -1
  , 69
  , -1
  , -1
  , 65
  , 73
  , -1
  , -1
  , 69
  , -1
  , 78
  , 79
  , -1
  , -1
  , 82
  , 83
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 83
  , -1
  , 85
  , 97
  , 98
  , 99
  , 100
  , 101
  , 102
  , -1
  , -1
  , 101
  , 68
  , 69
  , -1
  , -1
  , 72
  , -1
  , 101
  , -1
  , 76
  , 77
  , -1
  , 79
  , 80
  , -1
  , 82
  , -1
  , 84
  , 85
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 97
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 117
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_deflt :: Array Int Int
alex_deflt = listArray (0 :: Int, 1021)
  [ -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 573
  , 573
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 636
  , 636
  , -1
  , 641
  , 641
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 756
  , 756
  , -1
  , 763
  , 763
  , 763
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 775
  , 775
  , 775
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , 763
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  , -1
  ]

alex_accept = listArray (0 :: Int, 1021)
  [ AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccNone
  , AlexAccSkip
  , AlexAcc 256
  , AlexAcc 255
  , AlexAcc 254
  , AlexAcc 253
  , AlexAcc 252
  , AlexAcc 251
  , AlexAcc 250
  , AlexAcc 249
  , AlexAcc 248
  , AlexAcc 247
  , AlexAcc 246
  , AlexAcc 245
  , AlexAcc 244
  , AlexAcc 243
  , AlexAcc 242
  , AlexAcc 241
  , AlexAcc 240
  , AlexAcc 239
  , AlexAcc 238
  , AlexAcc 237
  , AlexAcc 236
  , AlexAcc 235
  , AlexAcc 234
  , AlexAcc 233
  , AlexAcc 232
  , AlexAcc 231
  , AlexAcc 230
  , AlexAcc 229
  , AlexAcc 228
  , AlexAcc 227
  , AlexAcc 226
  , AlexAcc 225
  , AlexAcc 224
  , AlexAcc 223
  , AlexAcc 222
  , AlexAcc 221
  , AlexAcc 220
  , AlexAcc 219
  , AlexAcc 218
  , AlexAcc 217
  , AlexAcc 216
  , AlexAcc 215
  , AlexAcc 214
  , AlexAcc 213
  , AlexAcc 212
  , AlexAcc 211
  , AlexAcc 210
  , AlexAcc 209
  , AlexAcc 208
  , AlexAcc 207
  , AlexAcc 206
  , AlexAcc 205
  , AlexAcc 204
  , AlexAcc 203
  , AlexAcc 202
  , AlexAcc 201
  , AlexAcc 200
  , AlexAcc 199
  , AlexAcc 198
  , AlexAcc 197
  , AlexAcc 196
  , AlexAcc 195
  , AlexAcc 194
  , AlexAcc 193
  , AlexAcc 192
  , AlexAcc 191
  , AlexAcc 190
  , AlexAcc 189
  , AlexAcc 188
  , AlexAcc 187
  , AlexAcc 186
  , AlexAcc 185
  , AlexAcc 184
  , AlexAcc 183
  , AlexAcc 182
  , AlexAcc 181
  , AlexAcc 180
  , AlexAcc 179
  , AlexAcc 178
  , AlexAcc 177
  , AlexAcc 176
  , AlexAcc 175
  , AlexAcc 174
  , AlexAcc 173
  , AlexAcc 172
  , AlexAcc 171
  , AlexAcc 170
  , AlexAcc 169
  , AlexAcc 168
  , AlexAcc 167
  , AlexAcc 166
  , AlexAcc 165
  , AlexAcc 164
  , AlexAcc 163
  , AlexAcc 162
  , AlexAcc 161
  , AlexAcc 160
  , AlexAcc 159
  , AlexAcc 158
  , AlexAcc 157
  , AlexAcc 156
  , AlexAcc 155
  , AlexAcc 154
  , AlexAcc 153
  , AlexAcc 152
  , AlexAcc 151
  , AlexAcc 150
  , AlexAcc 149
  , AlexAcc 148
  , AlexAcc 147
  , AlexAcc 146
  , AlexAcc 145
  , AlexAcc 144
  , AlexAcc 143
  , AlexAcc 142
  , AlexAcc 141
  , AlexAcc 140
  , AlexAcc 139
  , AlexAcc 138
  , AlexAcc 137
  , AlexAcc 136
  , AlexAcc 135
  , AlexAcc 134
  , AlexAcc 133
  , AlexAcc 132
  , AlexAcc 131
  , AlexAcc 130
  , AlexAcc 129
  , AlexAcc 128
  , AlexAcc 127
  , AlexAcc 126
  , AlexAcc 125
  , AlexAcc 124
  , AlexAcc 123
  , AlexAcc 122
  , AlexAcc 121
  , AlexAcc 120
  , AlexAcc 119
  , AlexAcc 118
  , AlexAcc 117
  , AlexAcc 116
  , AlexAcc 115
  , AlexAcc 114
  , AlexAcc 113
  , AlexAcc 112
  , AlexAcc 111
  , AlexAcc 110
  , AlexAcc 109
  , AlexAcc 108
  , AlexAcc 107
  , AlexAcc 106
  , AlexAcc 105
  , AlexAcc 104
  , AlexAcc 103
  , AlexAcc 102
  , AlexAcc 101
  , AlexAcc 100
  , AlexAcc 99
  , AlexAcc 98
  , AlexAcc 97
  , AlexAcc 96
  , AlexAcc 95
  , AlexAcc 94
  , AlexAcc 93
  , AlexAcc 92
  , AlexAcc 91
  , AlexAcc 90
  , AlexAcc 89
  , AlexAcc 88
  , AlexAcc 87
  , AlexAcc 86
  , AlexAcc 85
  , AlexAcc 84
  , AlexAcc 83
  , AlexAcc 82
  , AlexAcc 81
  , AlexAcc 80
  , AlexAcc 79
  , AlexAcc 78
  , AlexAcc 77
  , AlexAcc 76
  , AlexAcc 75
  , AlexAcc 74
  , AlexAcc 73
  , AlexAcc 72
  , AlexAcc 71
  , AlexAcc 70
  , AlexAcc 69
  , AlexAcc 68
  , AlexAcc 67
  , AlexAcc 66
  , AlexAcc 65
  , AlexAcc 64
  , AlexAcc 63
  , AlexAcc 62
  , AlexAcc 61
  , AlexAcc 60
  , AlexAcc 59
  , AlexAcc 58
  , AlexAcc 57
  , AlexAcc 56
  , AlexAcc 55
  , AlexAcc 54
  , AlexAcc 53
  , AlexAcc 52
  , AlexAcc 51
  , AlexAcc 50
  , AlexAcc 49
  , AlexAcc 48
  , AlexAcc 47
  , AlexAcc 46
  , AlexAcc 45
  , AlexAcc 44
  , AlexAcc 43
  , AlexAcc 42
  , AlexAcc 41
  , AlexAcc 40
  , AlexAcc 39
  , AlexAcc 38
  , AlexAcc 37
  , AlexAcc 36
  , AlexAcc 35
  , AlexAcc 34
  , AlexAcc 33
  , AlexAcc 32
  , AlexAcc 31
  , AlexAcc 30
  , AlexAcc 29
  , AlexAcc 28
  , AlexAcc 27
  , AlexAcc 26
  , AlexAcc 25
  , AlexAcc 24
  , AlexAcc 23
  , AlexAcc 22
  , AlexAcc 21
  , AlexAcc 20
  , AlexAcc 19
  , AlexAcc 18
  , AlexAcc 17
  , AlexAcc 16
  , AlexAcc 15
  , AlexAcc 14
  , AlexAcc 13
  , AlexAcc 12
  , AlexAcc 11
  , AlexAcc 10
  , AlexAcc 9
  , AlexAcc 8
  , AlexAcc 7
  , AlexAcc 6
  , AlexAcc 5
  , AlexAcc 4
  , AlexAcc 3
  , AlexAcc 2
  , AlexAcc 1
  , AlexAcc 0
  ]

alex_actions = array (0 :: Int, 257)
  [ (256,alex_action_1)
  , (255,alex_action_2)
  , (254,alex_action_3)
  , (253,alex_action_4)
  , (252,alex_action_5)
  , (251,alex_action_6)
  , (250,alex_action_7)
  , (249,alex_action_8)
  , (248,alex_action_9)
  , (247,alex_action_10)
  , (246,alex_action_11)
  , (245,alex_action_12)
  , (244,alex_action_13)
  , (243,alex_action_14)
  , (242,alex_action_15)
  , (241,alex_action_16)
  , (240,alex_action_17)
  , (239,alex_action_18)
  , (238,alex_action_19)
  , (237,alex_action_20)
  , (236,alex_action_21)
  , (235,alex_action_22)
  , (234,alex_action_23)
  , (233,alex_action_24)
  , (232,alex_action_25)
  , (231,alex_action_26)
  , (230,alex_action_27)
  , (229,alex_action_28)
  , (228,alex_action_29)
  , (227,alex_action_30)
  , (226,alex_action_31)
  , (225,alex_action_32)
  , (224,alex_action_33)
  , (223,alex_action_34)
  , (222,alex_action_35)
  , (221,alex_action_36)
  , (220,alex_action_37)
  , (219,alex_action_38)
  , (218,alex_action_39)
  , (217,alex_action_40)
  , (216,alex_action_41)
  , (215,alex_action_42)
  , (214,alex_action_43)
  , (213,alex_action_44)
  , (212,alex_action_45)
  , (211,alex_action_46)
  , (210,alex_action_47)
  , (209,alex_action_48)
  , (208,alex_action_49)
  , (207,alex_action_50)
  , (206,alex_action_51)
  , (205,alex_action_52)
  , (204,alex_action_53)
  , (203,alex_action_54)
  , (202,alex_action_55)
  , (201,alex_action_56)
  , (200,alex_action_57)
  , (199,alex_action_58)
  , (198,alex_action_59)
  , (197,alex_action_60)
  , (196,alex_action_61)
  , (195,alex_action_62)
  , (194,alex_action_63)
  , (193,alex_action_64)
  , (192,alex_action_65)
  , (191,alex_action_66)
  , (190,alex_action_67)
  , (189,alex_action_68)
  , (188,alex_action_69)
  , (187,alex_action_70)
  , (186,alex_action_71)
  , (185,alex_action_72)
  , (184,alex_action_73)
  , (183,alex_action_74)
  , (182,alex_action_75)
  , (181,alex_action_76)
  , (180,alex_action_77)
  , (179,alex_action_78)
  , (178,alex_action_79)
  , (177,alex_action_80)
  , (176,alex_action_81)
  , (175,alex_action_82)
  , (174,alex_action_83)
  , (173,alex_action_84)
  , (172,alex_action_85)
  , (171,alex_action_86)
  , (170,alex_action_87)
  , (169,alex_action_88)
  , (168,alex_action_89)
  , (167,alex_action_90)
  , (166,alex_action_91)
  , (165,alex_action_92)
  , (164,alex_action_93)
  , (163,alex_action_94)
  , (162,alex_action_95)
  , (161,alex_action_96)
  , (160,alex_action_97)
  , (159,alex_action_98)
  , (158,alex_action_99)
  , (157,alex_action_100)
  , (156,alex_action_101)
  , (155,alex_action_102)
  , (154,alex_action_103)
  , (153,alex_action_104)
  , (152,alex_action_105)
  , (151,alex_action_106)
  , (150,alex_action_107)
  , (149,alex_action_108)
  , (148,alex_action_109)
  , (147,alex_action_110)
  , (146,alex_action_111)
  , (145,alex_action_112)
  , (144,alex_action_113)
  , (143,alex_action_114)
  , (142,alex_action_115)
  , (141,alex_action_116)
  , (140,alex_action_117)
  , (139,alex_action_118)
  , (138,alex_action_119)
  , (137,alex_action_120)
  , (136,alex_action_121)
  , (135,alex_action_122)
  , (134,alex_action_123)
  , (133,alex_action_124)
  , (132,alex_action_125)
  , (131,alex_action_126)
  , (130,alex_action_127)
  , (129,alex_action_128)
  , (128,alex_action_129)
  , (127,alex_action_129)
  , (126,alex_action_129)
  , (125,alex_action_129)
  , (124,alex_action_130)
  , (123,alex_action_130)
  , (122,alex_action_130)
  , (121,alex_action_130)
  , (120,alex_action_130)
  , (119,alex_action_130)
  , (118,alex_action_131)
  , (117,alex_action_132)
  , (116,alex_action_133)
  , (115,alex_action_134)
  , (114,alex_action_135)
  , (113,alex_action_136)
  , (112,alex_action_137)
  , (111,alex_action_138)
  , (110,alex_action_139)
  , (109,alex_action_140)
  , (108,alex_action_141)
  , (107,alex_action_142)
  , (106,alex_action_143)
  , (105,alex_action_144)
  , (104,alex_action_145)
  , (103,alex_action_146)
  , (102,alex_action_147)
  , (101,alex_action_148)
  , (100,alex_action_149)
  , (99,alex_action_150)
  , (98,alex_action_151)
  , (97,alex_action_152)
  , (96,alex_action_153)
  , (95,alex_action_154)
  , (94,alex_action_155)
  , (93,alex_action_156)
  , (92,alex_action_157)
  , (91,alex_action_158)
  , (90,alex_action_159)
  , (89,alex_action_160)
  , (88,alex_action_161)
  , (87,alex_action_162)
  , (86,alex_action_163)
  , (85,alex_action_164)
  , (84,alex_action_165)
  , (83,alex_action_166)
  , (82,alex_action_167)
  , (81,alex_action_168)
  , (80,alex_action_169)
  , (79,alex_action_170)
  , (78,alex_action_171)
  , (77,alex_action_172)
  , (76,alex_action_173)
  , (75,alex_action_174)
  , (74,alex_action_175)
  , (73,alex_action_176)
  , (72,alex_action_177)
  , (71,alex_action_178)
  , (70,alex_action_179)
  , (69,alex_action_180)
  , (68,alex_action_181)
  , (67,alex_action_182)
  , (66,alex_action_183)
  , (65,alex_action_184)
  , (64,alex_action_185)
  , (63,alex_action_186)
  , (62,alex_action_187)
  , (61,alex_action_188)
  , (60,alex_action_189)
  , (59,alex_action_190)
  , (58,alex_action_191)
  , (57,alex_action_192)
  , (56,alex_action_193)
  , (55,alex_action_194)
  , (54,alex_action_195)
  , (53,alex_action_196)
  , (52,alex_action_197)
  , (51,alex_action_198)
  , (50,alex_action_199)
  , (49,alex_action_200)
  , (48,alex_action_201)
  , (47,alex_action_202)
  , (46,alex_action_203)
  , (45,alex_action_204)
  , (44,alex_action_205)
  , (43,alex_action_206)
  , (42,alex_action_207)
  , (41,alex_action_208)
  , (40,alex_action_209)
  , (39,alex_action_210)
  , (38,alex_action_211)
  , (37,alex_action_212)
  , (36,alex_action_213)
  , (35,alex_action_214)
  , (34,alex_action_215)
  , (33,alex_action_216)
  , (32,alex_action_217)
  , (31,alex_action_218)
  , (30,alex_action_219)
  , (29,alex_action_220)
  , (28,alex_action_221)
  , (27,alex_action_222)
  , (26,alex_action_223)
  , (25,alex_action_224)
  , (24,alex_action_225)
  , (23,alex_action_226)
  , (22,alex_action_227)
  , (21,alex_action_228)
  , (20,alex_action_229)
  , (19,alex_action_230)
  , (18,alex_action_231)
  , (17,alex_action_232)
  , (16,alex_action_233)
  , (15,alex_action_234)
  , (14,alex_action_235)
  , (13,alex_action_236)
  , (12,alex_action_237)
  , (11,alex_action_238)
  , (10,alex_action_239)
  , (9,alex_action_240)
  , (8,alex_action_241)
  , (7,alex_action_242)
  , (6,alex_action_243)
  , (5,alex_action_244)
  , (4,alex_action_245)
  , (3,alex_action_246)
  , (2,alex_action_247)
  , (1,alex_action_248)
  , (0,alex_action_249)
  ]

{-# LINE 278 "src/GcssParser/GcssParserTokeniser.x" #-}

data Tokens =
  Long                |
  Short               |
  Code                |
  Installation        |
  Authentication      |
  End                 |
  Configuration       |
  Control             |
  Information         |
  Gcss                |
  Release             |
  Created             |
  By                  |
  Current             |
  Version             |
  Status              |
  Not                 |
  Approved            |
  Checked             |
  Compiled            |
  Consistent          |
  Modified            |
  Modification        |
  Record              |
  Checking            |
  Approval            |
  On                  |
  Header              |
  Name                |
  Address             |
  Customer            |
  Initialisation      |
  Time                |
  Comments            |
  Ladder              |
  Contents            |
  Rung                |
  Is                  |
  And                 |
  Contains            |
  Insert              |
  At                  |
  Purpose             |
  Notes               |
  Origin              |
  Cell                |
  With                |
  Links               |
  Valid               |
  Invalid             |
  Readonly            |
  Normally_open       |
  Normally_closed     |
  Horizontal_shunt    |
  Coil                |
  Empty               |
  End_contact         |
  Top                 |
  Bottom              |
  Left                |
  No                  |
  Yes                 |
  Colon               |
  LBrace              |
  RBrace              |
  Comma               |
  Period              |
  ForwardSlash        |
  Housing             |
  Housings            |
  Module              |
  Slot                |
  Sequence            |
  Num                 |
  Latches             |
  Latch               |
  Type                |
  HotStandby          |
  StandAlone          |
  Reserved            |
  Timers              |
  Timer               |
  Access              |
  Counter             |
  Trigger             |
  Duration            |
  Setting             |
  None                |
  RW                  |
  Fixed               |
  Default             |
  User                |
  Hvlm128             |
  Vpim50              |
  Diag                |
  Nvc232              |
  Vtc232              |
  Vrom50              |
  Evtc                |
  Cnvc                |
  Fault               |
  Start               |
  Inputs              |
  Input               |
  Initial             |
  State               |
  Outputs             |
  Output              |
  Port                |
  Adjacent            |
  Field               |
  Data                |
  Language            |
  Spec                |
  Processor           |
  Fct                 |
  Equipment           |
  Id                  |
  Ced                 |
  Rsas                |
  Of                  |
  Day                 |
  Set                 |
  Reset               |
  Rate                |
  Pair                |
  Hyphen              |
  Annotations         |
  Boolean             |
  Equation            |
  Equals              |
  Underscore          |
  R                   |
  W                   |
  H                   |
  M                   |
  S                   |
  D                   |
  Sr                  |
  Ch                  |
  Un                  |
  Pm                  |
  Primary             | 
  Secondary           |
  Timeout_delay       |
  Pm_cycle_time       |
  Som24               |
  Smb                 |
  Remote              |
  Flashing            |
  Dark                |
  PeriodText          |
  Antiphase           |
  Disabled            |
  TrueText            |
  FalseText           |
  Proving             |
  Group               |
  Vital               |
  Network             |
  Ports               |
  Non                 |
  Ntp                 |
  Server              |
  Ip                  |
  ReadText            |
  Password            |
  Westrace            |
  WriteText           |
  Digisafe            |
  Udp                 |
  Lag                 |
  Monitoring          |
  Mnemonics           |
  High                |
  Low                 |
  Detection           |
  Zero                |
  Holding             |
  Positive            |
  Negative            |
  Threshold           |
  Retained            |
  Aws                 |
  Protocol            |
  Wnc                 |
  Interface           |   
  File                |
  Checksum            |
  Session             |
  Diagnostic          |
  Ok                  |
  Loc                 |
  Timeout             |
  Wsa_s2_server       |
  Application         |
  Word                |
  Length              |
  Input_state         |
  Flash_name          |
  Phase_state         |
  Output_state        |
  E256                |
  Subnet              |
  Mask                |
  Destination         |
  Gateway             |
  Light               |
  Power               |
  Supply              |
  Pdi                 |
  Multicast           |
  Element             | 
  Indication          |
  ErrorText           |
  Names               |
  Function            |
  Confirm             |
  Parameter           |
  Instance            |
  Mne                 |
  Sda                 |
  Mirror              |
  Flt                 |
  Com                 |
  Accept              |
  Reject              | 
  Marking             |
  Indications         |
  List                |
  Text                |
  Ref                 |
  Tpl                 |
  Tin                 |
  HexNumber4 Int      |
  HexNumber7 Int      |
  Number Int          |
  Number2 Int         |
  Number4 Int         |
  NameString String   |
  DayName String      
  deriving (Eq,Show)

alex_action_1 =  \s -> NameString (reverse (tail (reverse (tail s)))) 
alex_action_2 =  \s -> Long 
alex_action_3 =  \s -> Short 
alex_action_4 =  \s -> Installation 
alex_action_5 =  \s -> Authentication 
alex_action_6 =  \s -> Code 
alex_action_7 =  \s -> Configuration 
alex_action_8 =  \s -> Control 
alex_action_9 =  \s -> Information 
alex_action_10 =  \s -> Gcss 
alex_action_11 =  \s -> Release 
alex_action_12 =  \s -> Created 
alex_action_13 =  \s -> By 
alex_action_14 =  \s -> Current 
alex_action_15 =  \s -> Version 
alex_action_16 =  \s -> Status 
alex_action_17 =  \s -> Not 
alex_action_18 =  \s -> Approved 
alex_action_19 =  \s -> Checked 
alex_action_20 =  \s -> Compiled 
alex_action_21 =  \s -> Consistent 
alex_action_22 =  \s -> Modified 
alex_action_23 =  \s -> Modification 
alex_action_24 =  \s -> Record 
alex_action_25 =  \s -> Checking 
alex_action_26 =  \s -> Approval 
alex_action_27 =  \s -> On 
alex_action_28 =  \s -> DayName s 
alex_action_29 =  \s -> Header 
alex_action_30 =  \s -> Name 
alex_action_31 =  \s -> Address 
alex_action_32 =  \s -> Customer 
alex_action_33 =  \s -> Initialisation 
alex_action_34 =  \s -> Time 
alex_action_35 =  \s -> Comments 
alex_action_36 =  \s -> Ladder 
alex_action_37 =  \s -> Contents 
alex_action_38 =  \s -> Rung 
alex_action_39 =  \s -> Is 
alex_action_40 =  \s -> And 
alex_action_41 =  \s -> Contains 
alex_action_42 =  \s -> Insert 
alex_action_43 =  \s -> At 
alex_action_44 =  \s -> Purpose 
alex_action_45 =  \s -> Notes 
alex_action_46 =  \s -> Origin 
alex_action_47 =  \s -> Cell 
alex_action_48 =  \s -> With 
alex_action_49 =  \s -> Links 
alex_action_50 =  \s -> Valid 
alex_action_51 =  \s -> Invalid 
alex_action_52 =  \s -> Readonly 
alex_action_53 =  \s -> Normally_open 
alex_action_54 =  \s -> Normally_closed 
alex_action_55 =  \s -> Horizontal_shunt 
alex_action_56 =  \s -> Coil 
alex_action_57 =  \s -> Empty 
alex_action_58 =  \s -> End_contact 
alex_action_59 =  \s -> Top 
alex_action_60 =  \s -> Bottom 
alex_action_61 =  \s -> Left 
alex_action_62 =  \s -> No 
alex_action_63 =  \s -> Yes 
alex_action_64 =  \s -> Housing 
alex_action_65 =  \s -> Housings 
alex_action_66 =  \s -> Module 
alex_action_67 =  \s -> Slot 
alex_action_68 =  \s -> Sequence 
alex_action_69 =  \s -> Num 
alex_action_70 =  \s -> Latches 
alex_action_71 =  \s -> Latch 
alex_action_72 =  \s -> Type 
alex_action_73 =  \s -> HotStandby 
alex_action_74 =  \s -> StandAlone 
alex_action_75 =  \s -> Reserved 
alex_action_76 =  \s -> Timers 
alex_action_77 =  \s -> Timer 
alex_action_78 =  \s -> Access 
alex_action_79 =  \s -> Trigger 
alex_action_80 =  \s -> Duration 
alex_action_81 =  \s -> Setting 
alex_action_82 =  \s -> None 
alex_action_83 =  \s -> RW 
alex_action_84 =  \s -> Fixed 
alex_action_85 =  \s -> Default 
alex_action_86 =  \s -> Counter 
alex_action_87 =  \s -> User 
alex_action_88 =  \s -> Hvlm128 
alex_action_89 =  \s -> Vpim50 
alex_action_90 =  \s -> Cnvc 
alex_action_91 =  \s -> Diag 
alex_action_92 =  \s -> Nvc232 
alex_action_93 =  \s -> Vtc232 
alex_action_94 =  \s -> Vrom50 
alex_action_95 =  \s -> Evtc 
alex_action_96 =  \s -> Fault 
alex_action_97 =  \s -> Start 
alex_action_98 =  \s -> Inputs 
alex_action_99 =  \s -> Input 
alex_action_100 =  \s -> Initial 
alex_action_101 =  \s -> State 
alex_action_102 =  \s -> Outputs 
alex_action_103 =  \s -> Output 
alex_action_104 =  \s -> Field 
alex_action_105 =  \s -> Rate 
alex_action_106 =  \s -> Data 
alex_action_107 =  \s -> Language 
alex_action_108 =  \s -> Spec 
alex_action_109 =  \s -> Processor 
alex_action_110 =  \s -> Fct 
alex_action_111 =  \s -> Equipment 
alex_action_112 =  \s -> Id 
alex_action_113 =  \s -> Ced 
alex_action_114 =  \s -> Rsas 
alex_action_115 =  \s -> Of 
alex_action_116 =  \s -> Day 
alex_action_117 =  \s -> Set 
alex_action_118 =  \s -> Reset 
alex_action_119 =  \s -> Port 
alex_action_120 =  \s -> Adjacent 
alex_action_121 =  \s -> Pair 
alex_action_122 =  \s -> Annotations 
alex_action_123 =  \s -> Boolean 
alex_action_124 =  \s -> Equation 
alex_action_125 =  \s -> HexNumber7 (read s) 
alex_action_126 =  \s -> HexNumber4 (read s) 
alex_action_127 =  \s -> Number4 (read s) 
alex_action_128 =  \s -> Number2 (read s) 
alex_action_129 =  \s -> Number (read s) 
alex_action_130 =  \s -> Number (read s) 
alex_action_131 =  \s -> Hyphen 
alex_action_132 =  \s -> Equals 
alex_action_133 =  \s -> Colon 
alex_action_134 =  \s -> Comma 
alex_action_135 =  \s -> LBrace 
alex_action_136 =  \s -> RBrace 
alex_action_137 =  \s -> Period 
alex_action_138 =  \s -> ForwardSlash 
alex_action_139 =  \s -> Underscore 
alex_action_140 =  \s -> End 
alex_action_141 =  \s -> R 
alex_action_142 =  \s -> W 
alex_action_143 =  \s -> H 
alex_action_144 =  \s -> H 
alex_action_145 =  \s -> M 
alex_action_146 =  \s -> M 
alex_action_147 =  \s -> S 
alex_action_148 =  \s -> S 
alex_action_149 =  \s -> D 
alex_action_150 =  \s -> Sr 
alex_action_151 =  \s -> Ch 
alex_action_152 =  \s -> Un 
alex_action_153 =  \s -> Pm 
alex_action_154 =  \s -> Primary 
alex_action_155 =  \s -> Secondary 
alex_action_156 =  \s -> Timeout_delay 
alex_action_157 =  \s -> Pm_cycle_time 
alex_action_158 =  \s -> Som24 
alex_action_159 =  \s -> Smb 
alex_action_160 =  \s -> Remote 
alex_action_161 =  \s -> Flashing 
alex_action_162 =  \s -> Dark 
alex_action_163 =  \s -> PeriodText 
alex_action_164 =  \s -> Antiphase 
alex_action_165 =  \s -> Disabled 
alex_action_166 =  \s -> TrueText 
alex_action_167 =  \s -> TrueText 
alex_action_168 =  \s -> FalseText 
alex_action_169 =  \s -> FalseText 
alex_action_170 =  \s -> FalseText 
alex_action_171 =  \s -> Proving 
alex_action_172 =  \s -> Group 
alex_action_173 =  \s -> Vital 
alex_action_174 =  \s -> Network 
alex_action_175 =  \s -> Ports 
alex_action_176 =  \s -> Non 
alex_action_177 =  \s -> Ntp 
alex_action_178 =  \s -> Server 
alex_action_179 =  \s -> Ip 
alex_action_180 =  \s -> ReadText 
alex_action_181 =  \s -> ReadText 
alex_action_182 =  \s -> Password 
alex_action_183 =  \s -> Westrace 
alex_action_184 =  \s -> WriteText 
alex_action_185 =  \s -> Digisafe 
alex_action_186 =  \s -> Udp 
alex_action_187 =  \s -> Lag 
alex_action_188 =  \s -> Monitoring 
alex_action_189 =  \s -> Mnemonics 
alex_action_190 =  \s -> High 
alex_action_191 =  \s -> Low 
alex_action_192 =  \s -> Detection 
alex_action_193 =  \s -> Zero 
alex_action_194 =  \s -> Holding 
alex_action_195 =  \s -> Positive 
alex_action_196 =  \s -> Negative 
alex_action_197 =  \s -> Threshold 
alex_action_198 =  \s -> Retained 
alex_action_199 =  \s -> Aws 
alex_action_200 =  \s -> Protocol 
alex_action_201 =  \s -> Wnc 
alex_action_202 =  \s -> Interface 
alex_action_203 =  \s -> File 
alex_action_204 =  \s -> Checksum 
alex_action_205 =  \s -> Session 
alex_action_206 =  \s -> Diagnostic 
alex_action_207 =  \s -> Ok 
alex_action_208 =  \s -> Loc 
alex_action_209 =  \s -> Timeout 
alex_action_210 =  \s -> Wsa_s2_server 
alex_action_211 =  \s -> Application 
alex_action_212 =  \s -> Word 
alex_action_213 =  \s -> Length 
alex_action_214 =  \s -> Input_state 
alex_action_215 =  \s -> Flash_name 
alex_action_216 =  \s -> Phase_state 
alex_action_217 =  \s -> Output_state 
alex_action_218 =  \s -> E256 
alex_action_219 =  \s -> Subnet 
alex_action_220 =  \s -> Mask 
alex_action_221 =  \s -> Destination 
alex_action_222 =  \s -> Gateway 
alex_action_223 =  \s -> Light 
alex_action_224 =  \s -> Power 
alex_action_225 =  \s -> Supply 
alex_action_226 =  \s -> Pdi 
alex_action_227 =  \s -> Multicast 
alex_action_228 =  \s -> Element 
alex_action_229 =  \s -> Indication 
alex_action_230 =  \s -> ErrorText 
alex_action_231 =  \s -> Names 
alex_action_232 =  \s -> Function 
alex_action_233 =  \s -> Confirm 
alex_action_234 =  \s -> Parameter 
alex_action_235 =  \s -> Instance 
alex_action_236 =  \s -> Mne 
alex_action_237 =  \s -> Sda 
alex_action_238 =  \s -> Mirror 
alex_action_239 =  \s -> Flt 
alex_action_240 =  \s -> Com 
alex_action_241 =  \s -> Accept 
alex_action_242 =  \s -> Reject 
alex_action_243 =  \s -> Marking 
alex_action_244 =  \s -> Indications 
alex_action_245 =  \s -> List 
alex_action_246 =  \s -> Text 
alex_action_247 =  \s -> Ref 
alex_action_248 =  \s -> Tpl 
alex_action_249 =  \s -> Tin 
{-# LINE 1 "templates\GenericTemplate.hs" #-}
{-# LINE 1 "templates\\GenericTemplate.hs" #-}
{-# LINE 1 "<built-in>" #-}
{-# LINE 1 "<command-line>" #-}
{-# LINE 8 "<command-line>" #-}
{-# LINE 1 "C:\\Users\\Z003W9PJ\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.2.2\\lib/include\\ghcversion.h" #-}















{-# LINE 8 "<command-line>" #-}
{-# LINE 1 "C:\\Users\\Z003W9PJ\\AppData\\Local\\Temp\\ghc7368_0\\ghc_2.h" #-}




























































































































































{-# LINE 8 "<command-line>" #-}
{-# LINE 1 "templates\\GenericTemplate.hs" #-}
-- -----------------------------------------------------------------------------
-- ALEX TEMPLATE
--
-- This code is in the PUBLIC DOMAIN; you may copy it freely and use
-- it for any purpose whatsoever.

-- -----------------------------------------------------------------------------
-- INTERNALS and main scanner engine

{-# LINE 21 "templates\\GenericTemplate.hs" #-}

{-# LINE 51 "templates\\GenericTemplate.hs" #-}

{-# LINE 72 "templates\\GenericTemplate.hs" #-}
alexIndexInt16OffAddr arr off = arr ! off


{-# LINE 93 "templates\\GenericTemplate.hs" #-}
alexIndexInt32OffAddr arr off = arr ! off


{-# LINE 105 "templates\\GenericTemplate.hs" #-}
quickIndex arr i = arr ! i


-- -----------------------------------------------------------------------------
-- Main lexing routines

data AlexReturn a
  = AlexEOF
  | AlexError  !AlexInput
  | AlexSkip   !AlexInput !Int
  | AlexToken  !AlexInput !Int a

-- alexScan :: AlexInput -> StartCode -> AlexReturn a
alexScan input__ (sc)
  = alexScanUser undefined input__ (sc)

alexScanUser user__ input__ (sc)
  = case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
  (AlexNone, input__') ->
    case alexGetByte input__ of
      Nothing ->



                                   AlexEOF
      Just _ ->



                                   AlexError input__'

  (AlexLastSkip input__'' len, _) ->



    AlexSkip input__'' len

  (AlexLastAcc k input__''' len, _) ->



    AlexToken input__''' len (alex_actions ! k)


-- Push the input through the DFA, remembering the most recent accepting
-- state it encountered.

alex_scan_tkn user__ orig_input len input__ s last_acc =
  input__ `seq` -- strict in the input
  let
  new_acc = (check_accs (alex_accept `quickIndex` (s)))
  in
  new_acc `seq`
  case alexGetByte input__ of
     Nothing -> (new_acc, input__)
     Just (c, new_input) ->



      case fromIntegral c of { (ord_c) ->
        let
                base   = alexIndexInt32OffAddr alex_base s
                offset = (base + ord_c)
                check  = alexIndexInt16OffAddr alex_check offset

                new_s = if (offset >= (0)) && (check == ord_c)
                          then alexIndexInt16OffAddr alex_table offset
                          else alexIndexInt16OffAddr alex_deflt s
        in
        case new_s of
            (-1) -> (new_acc, input__)
                -- on an error, we want to keep the input *before* the
                -- character that failed, not after.
            _ -> alex_scan_tkn user__ orig_input (if c < 0x80 || c >= 0xC0 then (len + (1)) else len)
                                                -- note that the length is increased ONLY if this is the 1st byte in a char encoding)
                        new_input new_s new_acc
      }
  where
        check_accs (AlexAccNone) = last_acc
        check_accs (AlexAcc a  ) = AlexLastAcc a input__ (len)
        check_accs (AlexAccSkip) = AlexLastSkip  input__ (len)

        check_accs (AlexAccPred a predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastAcc a input__ (len)
           | otherwise
           = check_accs rest
        check_accs (AlexAccSkipPred predx rest)
           | predx user__ orig_input (len) input__
           = AlexLastSkip input__ (len)
           | otherwise
           = check_accs rest


data AlexLastAcc
  = AlexNone
  | AlexLastAcc !Int !AlexInput !Int
  | AlexLastSkip     !AlexInput !Int

data AlexAcc user
  = AlexAccNone
  | AlexAcc Int
  | AlexAccSkip

  | AlexAccPred Int (AlexAccPred user) (AlexAcc user)
  | AlexAccSkipPred (AlexAccPred user) (AlexAcc user)

type AlexAccPred user = user -> AlexInput -> Int -> AlexInput -> Bool

-- -----------------------------------------------------------------------------
-- Predicates on a rule

alexAndPred p1 p2 user__ in1 len in2
  = p1 user__ in1 len in2 && p2 user__ in1 len in2

--alexPrevCharIsPred :: Char -> AlexAccPred _
alexPrevCharIs c _ input__ _ _ = c == alexInputPrevChar input__

alexPrevCharMatches f _ input__ _ _ = f (alexInputPrevChar input__)

--alexPrevCharIsOneOfPred :: Array Char Bool -> AlexAccPred _
alexPrevCharIsOneOf arr _ input__ _ _ = arr ! alexInputPrevChar input__

--alexRightContext :: Int -> AlexAccPred _
alexRightContext (sc) user__ _ _ input__ =
     case alex_scan_tkn user__ input__ (0) input__ sc AlexNone of
          (AlexNone, _) -> False
          _ -> True
        -- TODO: there's no need to find the longest
        -- match when checking the right context, just
        -- the first match will do.
